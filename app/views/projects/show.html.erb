<!-- Navbar -->
<nav class="navbar navbar-custom">
  <div class="d-flex w-100">
    <!-- User Info on the Left -->
    <div class="mr-auto d-flex align-items-center">
      <span class="text-white mx-2">
        <%= current_user.email %> | <%= current_user.role %>
      </span>
    </div>

    <!-- My Projects at the Center -->
    <div class="mx-auto">
      <a class="navbar-brand" href="#">Tasks of <%= @project.title %></a>
    </div>

    <!-- Logout and Audit Log on the Right -->
    <div class="ml-auto d-flex align-items-center">
     <%= link_to 'Projects', projects_path, class: 'btn btn-light mx-2' %>
      <%= link_to 'Logout', destroy_user_session_path, data: { turbo_method: :delete }, class: 'btn btn-light' %>
    </div>
  </div>
</nav>






<div class="container mt-4">
  <!-- Task Creation Form -->
  <div class="row justify-content-center">
    <div class="col-md-6">
      <div class="card bg-grey">
        <div class="card-body">
          <!-- Display errors if any -->
          <% if @task && @task.errors.any? %>
            <div id="error_explanation" class="alert alert-danger">
              <h4><%= pluralize(@task.errors.count, "error") %> prohibited this task from being saved:</h4>
              <ul>
                <% @task.errors.full_messages.each do |message| %>
                  <li><%= message %></li>
                <% end %>
              </ul>
            </div>
          <% end %>

          <%= form_with(model: [@project, @project.tasks.build], local: true) do |f| %>

            <div class="form-group">
              <%= f.label :title, 'Task Title' %>
              <%= f.text_field :title, class: 'form-control' %>
            </div>

            <div class="form-group">
              <%= f.label :description, 'Task Description' %>
              <%= f.text_area :description, class: 'form-control' %>
            </div>

            <div class="form-group">
              <%= f.label :dependent_task_id, 'Dependent Task' %>
              <%= f.collection_select :dependent_task_id, @project.tasks.where.not(id: @task&.id), :id, :title, { include_blank: 'None' }, class: 'form-control' %>
            </div>

            <div class="form-group">
              <%= f.label :status, 'Task Status' %>
              <%= f.hidden_field :status, value: 'backlog' %>
              <input type="text" class="form-control" value="Backlog" disabled>
            </div>
             
            <% if can? :create, Task %>
            <%= f.submit 'Add Task', class: 'btn btn-primary' %>
            <% end %>
            
            <% if can? :read, Task %>
            <%= link_to 'List', project_tasks_path(@project), class: 'btn btn-secondary' %>
            <% end %>

          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>


<!-- Drag and Drop Sections -->
<div class="container mt-5">
  <div class="row d-flex align-items-stretch">
    <div class="col-md-4">
      <div class="task-list h-100" data-status="backlog">
        <h3 class="text-dark-grey">Backlog</h3>
        <% @project.tasks.where(status: 'backlog').each do |task| %>
          <div class="task-card" data-task-id="<%= task.id %>" data-project-id="<%= task.project_id %>" draggable="true">
            <p>Task ID: <%= task.id %></p>
            <p>Task Title: <%= task.title %></p>
            <p>Description: <%= task.description %></p>
            
            <% if task.dependent_task %>
              <p>Depends on: <%= task.dependent_task.title %> (Status: <%= task.dependent_task.status %>)</p>
              <% if task.dependent_task&.status == 'completed' %>
                <p style="color: green;">Dependency ended</p>   
              <% else %>
                <p style="color: red;">Waiting for task &quot;<%= task.dependent_task&.title %>&quot; to get complete.</p>
              <% end %>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>
    <div class="col-md-4">
      <div class="task-list h-100" data-status="in_progress">
        <h3 class="text-dark-grey">In Progress</h3>
        <% @project.tasks.where(status: 'in_progress').each do |task| %>
          <div class="task-card" data-task-id="<%= task.id %>" data-project-id="<%= task.project_id %>" draggable="true">
            <p>Task ID: <%= task.id %></p>
            <p>Task Title: <%= task.title %></p>
            <p>Description: <%= task.description %></p>
            
            <% if task.dependent_task %>
              <p>Depends on: <%= task.dependent_task.title %> (Status: <%= task.dependent_task.status %>)</p>
              <% if task.dependent_task&.status == 'completed' %>
                <p style="color: green;">Dependency ended</p>   
              <% else %>
                <p style="color: red;">Waiting for task &quot;<%= task.dependent_task&.title %>&quot; to get complete.</p>
              <% end %>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>
    <div class="col-md-4">
      <div class="task-list h-100" data-status="completed">
        <h3 class="text-dark-grey">Completed</h3>
        <% @project.tasks.where(status: 'completed').each do |task| %>
          <div class="task-card" data-task-id="<%= task.id %>" data-project-id="<%= task.project_id %>" draggable="true">
            <p>Task ID: <%= task.id %></p>
            <p>Task Title: <%= task.title %></p>
            <p>Description: <%= task.description %></p>
            
            <% if task.dependent_task %>
              <p>Depends on: <%= task.dependent_task.title %> (Status: <%= task.dependent_task.status %>)</p>
              <% if task.dependent_task&.status == 'completed' %>
                <p style="color: green;">Dependency ended</p>       
              <% else %>
                <p style="color: red;">Waiting for task &quot;<%= task.dependent_task&.title %>&quot; to get complete.</p>
              <% end %>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<!-- JavaScript for Drag and Drop -->
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const taskCards = document.querySelectorAll('.task-card');
    const taskLists = document.querySelectorAll('.task-list');

    // Set up drag start event for each task card
    taskCards.forEach(card => {
      card.addEventListener('dragstart', event => {
        event.target.classList.add('dragging');
        event.dataTransfer.setData('text/plain', event.target.dataset.taskId);
      });

      card.addEventListener('dragend', event => {
        event.target.classList.remove('dragging');
      });
    });

    // Set up drag over and drop events for each task list (column)
    taskLists.forEach(list => {
      list.addEventListener('dragover', event => {
        event.preventDefault();
      });

      list.addEventListener('drop', event => {
        event.preventDefault();
        const taskId = event.dataTransfer.getData('text/plain');
        const taskCard = document.querySelector(`[data-task-id="${taskId}"]`);

        if (taskCard) {
          // Append the task card to the new status list (column)
          list.appendChild(taskCard);

          // Update the task status in the database via AJAX
          const newStatus = list.dataset.status;
          const projectId = taskCard.dataset.projectId;

          updateTaskStatus(projectId, taskId, newStatus);
        }
      });
    });

    // Function to update the task status via AJAX
    function updateTaskStatus(projectId, taskId, newStatus) {
      fetch(`/projects/${projectId}/tasks/${taskId}/update_status`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        },
        body: JSON.stringify({ status: newStatus })
      })
      .then(response => response.json())
      .then(data => {
        if (!data.success) {
          alert('Failed to update task status.');
        }
      })
      .catch(error => console.error('Error:', error));
    }
  });
</script>

<!-- CSS Styling -->
<style>
  body {
    background-color: white;
  }

  .navbar {
    background-color: grey;
  }

  .card.bg-grey {
    background-color: grey;
    padding: 20px;
    border-radius: 5px;
  }

  .task-list {
    border: 1px solid #ccc;
    min-height: 200px;
    padding: 10px;
    background-color: grey;
    border-radius: 5px;
    margin-bottom: 10px;
  }

  .task-card {
    background-color: white;
    margin: 5px 0;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    cursor: grab;
  }

  .task-card.dragging {
    opacity: 0.5;
  }

  .text-dark-grey {
    color: #333;
  }
</style>

